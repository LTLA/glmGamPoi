// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// makeCumSumLookupVector
IntegerVector makeCumSumLookupVector(IntegerVector y);
RcppExport SEXP _glmGamPoi_makeCumSumLookupVector(SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(makeCumSumLookupVector(y));
    return rcpp_result_gen;
END_RCPP
}
// score_function_bandara_fast
double score_function_bandara_fast(IntegerVector y, IntegerVector cumsumLookupTable, NumericVector mu, double r, const arma::mat& model_matrix, bool do_cr_adj);
RcppExport SEXP _glmGamPoi_score_function_bandara_fast(SEXP ySEXP, SEXP cumsumLookupTableSEXP, SEXP muSEXP, SEXP rSEXP, SEXP model_matrixSEXP, SEXP do_cr_adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cumsumLookupTable(cumsumLookupTableSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type model_matrix(model_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type do_cr_adj(do_cr_adjSEXP);
    rcpp_result_gen = Rcpp::wrap(score_function_bandara_fast(y, cumsumLookupTable, mu, r, model_matrix, do_cr_adj));
    return rcpp_result_gen;
END_RCPP
}
// score_deriv_function_bandara_fast
double score_deriv_function_bandara_fast(IntegerVector y, IntegerVector cumsumLookupTable, NumericVector mu, double r, const arma::mat& model_matrix, bool do_cr_adj);
RcppExport SEXP _glmGamPoi_score_deriv_function_bandara_fast(SEXP ySEXP, SEXP cumsumLookupTableSEXP, SEXP muSEXP, SEXP rSEXP, SEXP model_matrixSEXP, SEXP do_cr_adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cumsumLookupTable(cumsumLookupTableSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type model_matrix(model_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type do_cr_adj(do_cr_adjSEXP);
    rcpp_result_gen = Rcpp::wrap(score_deriv_function_bandara_fast(y, cumsumLookupTable, mu, r, model_matrix, do_cr_adj));
    return rcpp_result_gen;
END_RCPP
}
// conventional_loglikelihood_fast
double conventional_loglikelihood_fast(NumericVector y, NumericVector mu, double log_theta, const arma::mat& model_matrix, bool do_cr_adj);
RcppExport SEXP _glmGamPoi_conventional_loglikelihood_fast(SEXP ySEXP, SEXP muSEXP, SEXP log_thetaSEXP, SEXP model_matrixSEXP, SEXP do_cr_adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type log_theta(log_thetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type model_matrix(model_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type do_cr_adj(do_cr_adjSEXP);
    rcpp_result_gen = Rcpp::wrap(conventional_loglikelihood_fast(y, mu, log_theta, model_matrix, do_cr_adj));
    return rcpp_result_gen;
END_RCPP
}
// conventional_score_function_fast
double conventional_score_function_fast(NumericVector y, NumericVector mu, double log_theta, const arma::mat& model_matrix, bool do_cr_adj);
RcppExport SEXP _glmGamPoi_conventional_score_function_fast(SEXP ySEXP, SEXP muSEXP, SEXP log_thetaSEXP, SEXP model_matrixSEXP, SEXP do_cr_adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type log_theta(log_thetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type model_matrix(model_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type do_cr_adj(do_cr_adjSEXP);
    rcpp_result_gen = Rcpp::wrap(conventional_score_function_fast(y, mu, log_theta, model_matrix, do_cr_adj));
    return rcpp_result_gen;
END_RCPP
}
// conventional_deriv_score_function_fast
double conventional_deriv_score_function_fast(NumericVector y, NumericVector mu, double log_theta, const arma::mat& model_matrix, bool do_cr_adj);
RcppExport SEXP _glmGamPoi_conventional_deriv_score_function_fast(SEXP ySEXP, SEXP muSEXP, SEXP log_thetaSEXP, SEXP model_matrixSEXP, SEXP do_cr_adjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type log_theta(log_thetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type model_matrix(model_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type do_cr_adj(do_cr_adjSEXP);
    rcpp_result_gen = Rcpp::wrap(conventional_deriv_score_function_fast(y, mu, log_theta, model_matrix, do_cr_adj));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_glmGamPoi_makeCumSumLookupVector", (DL_FUNC) &_glmGamPoi_makeCumSumLookupVector, 1},
    {"_glmGamPoi_score_function_bandara_fast", (DL_FUNC) &_glmGamPoi_score_function_bandara_fast, 6},
    {"_glmGamPoi_score_deriv_function_bandara_fast", (DL_FUNC) &_glmGamPoi_score_deriv_function_bandara_fast, 6},
    {"_glmGamPoi_conventional_loglikelihood_fast", (DL_FUNC) &_glmGamPoi_conventional_loglikelihood_fast, 5},
    {"_glmGamPoi_conventional_score_function_fast", (DL_FUNC) &_glmGamPoi_conventional_score_function_fast, 5},
    {"_glmGamPoi_conventional_deriv_score_function_fast", (DL_FUNC) &_glmGamPoi_conventional_deriv_score_function_fast, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_glmGamPoi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
